traits:
  ruby-install: true
  Bash: true

scripts:

  legacy-bundle-rspec-ruby:
    exclusive_executor_resource: ruby-install_{{$LEGACY_RUBY}}
    timeout: 5 Minutes
    body: |
      #!/usr/bin/env bash
      set -eux

      cd $LEIHS_LEGACY_DIR

      if [ -d legacy ]; then cd legacy; fi

      export PATH=~/.rubies/$LEGACY_RUBY/bin:$PATH

      if [ ! -d ~/.rubies/$LEGACY_RUBY ]; then
        ruby-install --no-install-deps $LEGACY_RUBY_ENGINE $LEGACY_RUBY_VERSION
      fi

      if [ ! -f ~/.rubies/$LEGACY_RUBY/bin/bundle ]; then
        gem install bundler
      fi

      cd $LEIHS_LEGACY_DIR

      # NOTE: this could be activated as a last resort if bundler setup of repos using the same executors become incompatible:
      # bundle config --local path 'vendor/bundle'

      # mini_racer / libv8-node / bundler issues workaround <https://github.com/rubygems/rubygems/issues/3174>
      gem update --system
      # if the libv8-node gem was installed (globally!) in a broken state, remove it and mini_racer!
      # FIXME: this should not run while tests are runningâ€¦ we cant really block that much, so accept some fails as this will run seldomly
      if gem list info libv8-node | grep -q musl; then
        gem uninstall --force --no-abort-on-dependent --all mini_racer libv8-node
        gem install libv8-node
        gem install mini_racer -v '0.6.2'
      fi

      bundle config --local without 'development'
      bundle install

  test:
    start_when:
      gems are bundled:
        script_key: legacy-bundle-rspec-ruby
        states: [passed]
